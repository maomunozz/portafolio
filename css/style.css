@import url("https://fonts.googleapis.com/css2?family=Poppins:wght@100;200;300;400;500;600;700;800;900&display=swap");

/* Variables */

:root {
  --dark-one: #333;
  --dark-two: #7a7a7a;
  --main-color: #8c15ff;
  --secondary-color: #47008b;
  --light-one: #fff;
  --light-two: #f9fafb;
  --light-three: #f6f7fb;
}

/* Estilos generales */

/*
 Danis un margin y un padding de 0 y un box-sizing border box para 
*/
* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

/* se utiliza para especificar el comportamiento de desplazamiento
suave (smooth scrolling) en una página web */
html {
  scroll-behavior: smooth;
}

body,
button,
input,
textarea {
  font-family: "Poppins", sans-serif;
}

a {
  text-decoration: none;
}

ul {
  list-style: none;
}

img {
  width: 100%;
}

.container {
  position: relative;
  z-index: 5;
  max-width: 92rem;
  padding: 0 4rem;
  margin: 0 auto;
}

/* grid-template-columns se utiliza para definir el número y
el tamaño de las columnas en un grid de CSS 

repeat(2, 1fr): Esto indica que se deben crear dos columnas en el grid.
1fr: Cada columna debe ocupar una fracción igual del espacio disponible
en el contenedor. En este caso, ambas columnas serán del mismo tamaño y
ocuparán igualmente el espacio disponible en el contenedor.
*/
.grid-2 {
  display: grid;
  grid-template-columns: repeat(2, 1fr);
  align-items: center;
  justify-content: center;
}

.text {
  font-size: 1.25rem;
  color: var(--dark-two);
  line-height: 1.6;
}

.column-1 {
  margin-right: 1.5rem;
}

.column-2 {
  margin-left: 1.5rem;
}

/* position: relative posiciona un elemento en relación con
su posición original en el flujo del documento. */
.image {
  position: relative;
  display: flex;
  align-items: center;
  justify-content: center;
}

.z-index {
  position: relative;
  z-index: 2;
}

/* position: absolute posiciona un elemento en relación con su 
elemento padre más cercano que tiene una propiedad de posicionamiento 
diferente a static (generalmente relative, absolute, o fixed). */
.points {
  opacity: 0.3;
  position: absolute;
}

/* Cuando trabajas con diseños web y elementos que se superponen,
overflow: hidden puede ayudar a evitar que el contenido desborde o
se superponga incorrectamente, manteniendo todo dentro de los
límites del contenedor */
.section {
  padding: 7rem 0;
  overflow: hidden;
}

.section-header {
  text-align: center;
  margin-bottom: 1.5rem;
}

.title {
  position: relative;
  display: inline-block;
  padding-bottom: 1rem;
  line-height: 1;
  font-size: 2.8rem;
  margin-bottom: 0.6rem;
}

.title:before {
  content: attr(data-title);
  display: block;
  margin-bottom: 0.4rem;
  color: var(--main-color);
  font-size: 1.15rem;
  font-weight: 500;
  text-transform: uppercase;
  letter-spacing: 3px;
}

.title:after {
  content: "";
  position: absolute;
  width: 90px;
  height: 5px;
  border-radius: 3px;
  background-color: var(--main-color);
  bottom: 0;
  left: 50%;
  transform: translateX(-50%);
}

.section-header .text {
  max-width: 600px;
  margin: 0 auto;
}

.title-sm {
  color: var(--dark-one);
  font-weight: 600;
  font-size: 1.6rem;
}

.btn {
  display: inline-block;
  padding: 0.85rem 2rem;
  background-color: var(--main-color);
  color: var(--light-one);
  border-radius: 2rem;
  font-size: 1.05rem;
  text-transform: uppercase;
  font-weight: 500;
  transition: 0.3s;
  border: none;
}

.btn:hover {
  background-color: var(--secondary-color);
}

.btn.small {
  padding: 0.7rem 1.8rem;
  font-size: 1rem;
}

.btn button {
  border: none;
  background-color: var(--main-color);
}

/* Fin de estilos generales */
